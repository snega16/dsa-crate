https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array

class Solution:
    def searchRange(self,arr,target):
        ans = [-1,-1]
        # check for first occurence
        ans[0] = search(arr, target, findStartIndex=True)
        if ans[0] != -1:
            ans[1] = search(arr, target, findStartIndex=False)
        return ans


def search(arr, target, findStartIndex:bool):
    ans = -1
    start = 0
    end = len(arr) - 1
    while start <= end:
        mid = (start + end) // 2
        if target > arr[mid]:
            start = mid + 1
        elif target < arr[mid]:
            end = mid - 1
        else:
            # potential ans, it may be the ans
            ans = mid
            if findStartIndex:
                # run binary search in first half
                end = mid - 1 
            else:
                # run binary search in second half
                start = mid + 1
    return ans
